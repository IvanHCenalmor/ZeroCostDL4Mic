----------- ZeroCostDL4Mic -----------

bioRxiv preprint available here:
https://www.biorxiv.org/content/10.1101/2020.03.20.000133v4


Latest releases available here:
https://github.com/HenriquesLab/ZeroCostDL4Mic/releases


—————————————————————————————————————————————————————————
ZeroCostDL4Mic v1.12

Major changes:

- PDF export of training session is now done before the training starts, so records are kept in case training fails to finalise.
- StarDist 2D is now compatible with RGB image input
- Beta notebooks: new notebooks available: SplineDist and 3D-RCAN. SplineDist also includes compatibility with RGB input.

+ general minor notebook optimisations.


—————————————————————————————————————————————————————————
ZeroCostDL4Mic v1.11


Major changes:

- Addition of Training and Quality Control report PDF export to all official release notebooks
- Addition of Automatic Version Control to all notebooks, checking whether the user is using the latest release of the notebooks
- Introduction of a failsafe to avoid overwriting an existing model folder, upon starting a new training session
- Automatic export of the requirements.txt file, necessary for running the notebooks locally

- U-Net 2D: Improved data loading avoiding extensive usage of RAM when creating patches

- fnet: added validation-split as training parameter

- Beta notebooks: U-Net 2D and Deep-STORM versions of the notebooks allowing model export towards DeepImageJ (thanks, Esti!!!!). NOTE: Deep-STORM DeepImageJ notebook was downgraded to TF1.x for compatibility.
https://www.biorxiv.org/content/10.1101/799270v2



—————————————————————————————————————————————————————————
ZeroCostDL4Mic v1.10


Major changes:

- New beta notebook : DenoiSeg 2D

- StarDist 2D, StarDist 3D, CARE 2D and CARE 3D notebooks now back to TensorFlow 1.5 (instead of TF 2.2, issues with TF 2.3)

- Deep-STORM now runs on TensorFlow 2.3

- Models trained using StarDist 2D, CARE 2D, CARE 3D, DenoiSeg 2D, Noise2Void 2D and 3D notebooks can be used in Fiji via their respective plugin


—————————————————————————————————————————————————————————
ZeroCostDL4Mic v1.9

Minor aesthetic bug fixes (titles and section naming mostly).



—————————————————————————————————————————————————————————
ZeroCostDL4Mic v1.8

Major changes:

- Beta Notebooks have now been move to main notebooks
- The StarDist 2D Fiji notebook is now obselete as the model export works in the main notebook.

Main notebooks:
——————————————

- StarDist 2D, StarDist 3D, CARE 2D and CARE 3D notebooks now uses TensorFlow 2.2 (instead of TF 1.5.15)

- YOLOv2 notebook: QC section now uses the same mAP function as the training, for better consistency of results; ground-truth labels and predicted labels in the QC section are exported to the QC folder as csv files which holde the bounding box coordinates and class labels; Display of prediction results now more consistent with display of GT labels; Updated Augmentation Section, now between 2-8 times augmentation of dataset possible; Additional csv file with predicted bounding box coordinates in a format suitable for use in imageJ as Results Table is now exported to the user's results folder in the Prediction section; Added 'training_times' as hyperparameter for improved tuning of model training; Tracking of mAP during training implemented; After training, model with best validation performance, best mAP score and the last model weights are saved to allow easier performance comparison by the user; Updated explanation of parameters and QC section.

- 3D U-Net:
    1. Added ability to train network on non-binary targets
    2. Added ability to choose loss, metrics and optimizer
    3. Fixed data generator bug leading to erroneous generator length when choosing random_crop
    4. Added support for using the imgaug library and creating custom augmentation pipelines

+ minor modifications and bug fixes


—————————————————————————————————————————————————————————
ZeroCostDL4Mic v1.7

Major changes:

- Creation of a "Tools" folder that contains code that can be used to complement our notebooks.
- Release of four new beta notebooks (see below). 

Main notebooks:
——————————————

- Stardist 2D
Fixed the rotation issue of the tracking file

- Fnet
Bug fixes and code modification
Implementation of widget to view predicted files in section 6.

+ minor modifications and bug fixes

Beta notebooks:
————————————————

- First beta release of a 3D Unet notebook, based on Cicek et al. arXiv 2016 (https://arxiv.org/pdf/1606.06650.pdf). The notebook has all ZeroCostDL4Mic functionalities. This notebook was re-implemented by Daniel Krentzel. 

- DeepSTORM: 
    - new prediction implementation having localization list as output for further localization-based analysis
    - a drift correction cell and a visualization cell are now included for final optimisation of data output
    - automatic estimation of the L2_normalisation_factor used in the loss function, to take varying density and upsampling_factor into account
    - automatic saving and loading of TIF files with metadata (mainly useful for pixel size)
    - implementing an upsampling_factor of 16 as well as the 4 and 8 previously used

- First beta release of a pix2pix notebook, based on Isola et al. arXiv 2016 (https://arxiv.org/pdf/1606.06650.pdf). The notebook has all ZeroCostDL4Mic functionalities. The original implementation and source code of pix2pix is available here: https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix 

- First beta release of a CycleGAN notebook, based on Zhu et al. arXiv 2017 (https://arxiv.org/abs/1703.10593). The notebook has all ZeroCostDL4Mic functionalities. The original implementation and source code of CycleGAN is available here: https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix

- First beta release of a YoloV2 notebook, based on Redmon & Farhadi 2017 (https://ieeexplore.ieee.org/document/8100173). The notebook has all ZeroCostDL4Mic functionalities. The implementation and source code of this YoloV2 notebook is available here: https://github.com/experiencor/keras-yolo2

Tools:
————————————————
- First beta release of an Augmentor notebook, based on Bloice et al. Bioinformatics 2019 (https://academic.oup.com/bioinformatics/article-abstract/35/21/4522/5466454?redirectedFrom=fulltext). The original source code of Augmentor is available here: https://github.com/mdbloice/Augmentor

- First release of a python script to automatically track nuclei (detected with our Stardist 2D notebook) using Trackmate (in Fiji). For more information see our wiki page. 



—————————————————————————————————————————————————————————
ZeroCostDL4Mic v1.6

Major changes:

- A new section has been added (3.2) to allow users to use augmentations strategies to increase the size of their training data. 

In the CARE 2D notebook
- Displayed imaged are now normalised

In the CARE 3D notebook
- Displayed imaged are now normalised
- Sliders are now available to look through the predicted stacks

In the Stardist 2D notebook (including the beta notebook):
- New pre-trained network are available

In the Stardist 3D notebook:
- Users can now specify the type of results that are exported during the prediction step
- During the prediction step, when analysing stacks, the notebook can now create tracking files that can easily be used in Trackmate to track migrating cells

In the U-net notebook:
- Patch generation from training dataset, improving stability
- Predictions is now peformed in patches and tiling
- Limiting patch sizes to 512x512 maximum for stability

+ minor modifications and bug fixes



—————————————————————————————————————————————————————————
ZeroCostDL4Mic v1.5

- We now provide "beta" notebooks. These notebooks are either new networks we are currently working on, or variations of the network provided as "Main" notebooks.

Main notebooks:
——————————————

Major changes:

- We now provide "beta" notebooks. These notebooks are either new networks we are currently working on or variations of the network provided

In all the notebooks:
- A new section has been added (3.2) to allow users to load a previously trained model to continue the training (transfer learning)
- New GPU display using NVIDIA smi
- The Learning rate is now available as an advanced parameter
- Models can now be loaded using their folder path directly (section 5 and section 6)

In the Unet notebook:
- Major code review simplifying the underlying code, improved performance and reliability
- The learning rate schedule has now been implemented (learning rate decreases when Val_loss plateau for 10 epochs)
- Handling of images of different sizes and bit depth for training, QC and prediction
- Best and last models are now saved
- changed the Quality Control Section to calculate IoU score instead of SSIM and PSNR, this now includes an automatic threshold estimation
- in section 6 the notebook now saves the original prediction of Unet AND a corresponding binary mask calculated using thresholding.

In the Stardist 2D notebook:
- gputools and edt are now installed to improve training performance

In the Stardist 3D notebook:
- gputools and edt are now installed to improve training performance
- The users can now modify the numbers of tile to use when performing the prediction.

+ minor modifications and bug fixes

Beta notebooks:
————————————————

- First BETA release of: Deep-STORM from Nehme E. Et al. Optica 2018! High density SMLM image reconstruction. Full Python workflow: from simulation of training data, patch generation, training and inference. Fully trainable and useable. 
- A modified version of the Stardist 2D notebook which allows to use the trained model in the Stardist Fiji plugin is now available. This notebook uses Tensorflow 1.13.1 (instead of 1.15.2 in the main notebook) and CUDA 10.1. 




—————————————————————————————————————————————————————————
ZeroCostDL4Mic v1.4.1

Major changes:
Hyperparameters fail-safes have been added to all notebooks.
The implementation of SSIM from SciKit is now used. PSNR is now also calculated during quality control.
In the 3D notebooks (including fnet), the quality assessment metrics are now calculated on a slice-by-slice basis and not from the maximum intensity projection anymore.
In the CARE notebooks:
- The new default batch_size is 16 (instead of 64 previously).
In the Sartdist 2D notebook:
- The new default patch_size is automatically defined as the size of the images to analyse.
- Stardist grid_size is now modifiable as an advanced parameter.
In the CARE 3D and Noise2VOID3D notebooks, the users can now modify the numbers of tile to use when performing the prediction.

+ minor modifications.



